dlopen

目录

    基本定义
    使用 dlopen

编辑本段基本定义
　　功能：打开一个动态链接库
　　包含头文件：
　　#include <dlfcn.h>
　　函数定义：
　　void * dlopen( const char * pathname, int mode);
　　函数描述：
　　在dlopen（）函数以指定模式打开指定的动态连接库文件，并返回一个句柄给调
	用进程。使用dlclose（）来卸载打开的库。
　　mode是打开方式，其值有多个，不同操作系统上实现的功能有所不同，在linux下，
	按功能可分为三类：
　　1、解析方式
　　RTLD_LAZY：在dlopen返回前，对于动态库中的未定义的符号不执行解析（只对函数引用有效，对于变量引用总是立即解析）。
　　RTLD_NOW： 需要在dlopen返回前，解析出所有未定义符号，如果解析不出来，在dlopen会返回NULL，错误为：: undefined symbol: xxxx.......
　　2、作用范围，可与解析方式通过“|”组合使用。
　　RTLD_GLOBAL：动态库中定义的符号可被其后打开的其它库重定位。
　　RTLD_LOCAL： 与RTLD_GLOBAL作用相反，动态库中定义的符号不能被其后打开的其它库重定位。如果没有指明是RTLD_GLOBAL还是RTLD_LOCAL，则缺省为RTLD_LOCAL。
　　3、作用方式
　　RTLD_NODELETE： 在dlclose()期间不卸载库，并且在以后使用dlopen()重新加载库时不初始化库中的静态变量。这个flag不是POSIX-2001标准。
　　RTLD_NOLOAD： 不加载库。可用于测试库是否已加载(dlopen()返回NULL说明未加载，否则说明已加载），也可用于改变已加载库的flag，
	如：先前加载库的flag为RTLD_LOCAL，用dlopen(RTLD_NOLOAD|RTLD_GLOBAL)后flag将变成RTLD_GLOBAL。这个flag不是POSIX-2001标准。
　　RTLD_DEEPBIND：在搜索全局符号前先搜索库内的符号，避免同名符号的冲突。这个flag不是POSIX-2001标准。
　　返回值:
　　打开错误返回NULL
　　成功，返回库引用
　　编译时候要加入 -ldl (指定dl库)
　　例如
　　gcc test.c -o test -ldl
编辑本段使用 dlopen
　　dlopen()是一个强大的库函数。该函数将打开一个新库，并把它装入内存。该函数主要用来加载库中的符号，这些符号在编译的
时候是不知道的。比如 Apache Web 服务器利用这个函数在运行过程中加载模块，这为它提供了额外的能力。一个配置文件控制了加
载模块的过程。这种机制使得在系统中添加或者删除一个模块时，都不需要重新编译了。
　　可以在自己的程序中使用 dlopen()。dlopen() 在 dlfcn.h 中定义，并在 dl 库中实现。它需要两个参数：一个文件名和一个
标志。文件名可以是我们学习过的库中的 soname。标志指明是否立刻计算库的依赖性。如果设置为 RTLD_NOW 的话，则立刻计算；如
果设置的是 RTLD_LAZY，则在需要的时候才计算。另外，可以指定 RTLD_GLOBAL，它使得那些在以后才加载的库可以获得其中的符号。
　　当库被装入后，可以把 dlopen() 返回的句柄作为给 dlsym() 的第一个参数，以获得符号在库中的地址。使用这个地址，就可以
获得库中特定函数的指针，并且调用装载库中的相应函数。
